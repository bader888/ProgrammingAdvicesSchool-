using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main()
        {
            Calculater calculater = new Calculater();

            calculater.Add(10);
            calculater.PrintResult();

            calculater.Subtract(5);
            calculater.PrintResult();

            calculater.Multiply(2);
            calculater.PrintResult();

            calculater.Divide(4);
            calculater.PrintResult();

            calculater.Clear();

            calculater.Add(10);
            calculater.PrintResult();

            calculater.Multiply(2);
            calculater.CancelLastOperation();
        }
        class Calculater
        {
            private int _result = 0, _prevResult = 0, _userInputNumber = 0, _prevUserInputNumber = 0;
            private string _operationName = "", _prevOperationName = "";

            //****************** ((setters and getters))****************************//
            private void _setResult(int number) => _result = number;
            private int _getResult() => _result;
            private void _setPrevResult() => _prevResult = _result;
            private int _getPrevResult() => _prevResult;
            private void _setOperationName(string operationName) => _operationName = operationName;
            private string _getOperationName() => _operationName;
            private void _setPrevOperationName() => _prevOperationName = _getOperationName();
            private string _getPrevOperationName() => _prevOperationName;
            private void _setUserInputNumber(int userInputNumber) => _userInputNumber = userInputNumber;
            private int _getUserInputNumber() => _userInputNumber;
            private void _setPrevUserInputNumber() => _prevUserInputNumber = _userInputNumber;
            private int _getPrevUserInputNumber() => _prevUserInputNumber;
            //***************************************************************//
            private bool _IsNegativeNumber(int number) => number < 0;
            private string _printResultRow(string operationName, int number, int result) =>
                "Result After " + operationName.PadRight(12, ' ') + " "
                                + number.ToString("00") + " is: "
                                + result.ToString("00");
            private void _cancelLastOperation()
            {
                _setResult(_getPrevResult());
                _setOperationName(_getPrevOperationName());
                _setUserInputNumber(_getPrevUserInputNumber());
            }
            private void _clearMessage()
            {
                Console.WriteLine();
                Console.WriteLine("_______Cleared Successfully_______");
                Console.WriteLine();
            }
            private void _resetProps()
            {
                _result = 0;
                _prevResult = 0;
                _operationName = "";
                _prevOperationName = "";
            }
            private void _cancelLastOperationMenue()
            {
                Console.WriteLine();
                Console.WriteLine("_____Canceled last operation______");
                Console.WriteLine("Type  : {0}", _getOperationName());
                Console.WriteLine("Number: {0}", _getUserInputNumber().ToString("00"));
                Console.WriteLine("___________________________________");
                Console.WriteLine();
            }
            private void _savePropsLog(int userInputNumber)
            {
                _setPrevResult();
                _setPrevOperationName();
                _setPrevUserInputNumber();
                _setUserInputNumber(userInputNumber);
            }
            public void Add(int number)
            {
                _savePropsLog(number);
                _setResult(_getResult() + number);
                _setOperationName("Adding");
            }
            public void Subtract(int number)
            {
                _savePropsLog(number);
                _setResult(_getResult() - number);
                _setOperationName("Subtracting");
            }
            public void Multiply(int number)
            {
                _savePropsLog(number);
                _setResult(_getResult() * number);
                _setOperationName("Multipling");
            }
            public void Divide(int number)
            {
                _savePropsLog(number);
                if (_IsNegativeNumber(number)) number = 1;
                _setResult(_getResult() / number);
                _setOperationName("Dividing");
            }
            public void Clear()
            {
                _clearMessage();
                _resetProps();
            }
            public void CancelLastOperation()
            {
                PrintResult();
                _cancelLastOperationMenue();
                _cancelLastOperation();
                PrintResult();
            }
            public void PrintResult() =>
                Console.WriteLine(_printResultRow(_getOperationName(), _getUserInputNumber(), _getResult()));
        }
    }
}
