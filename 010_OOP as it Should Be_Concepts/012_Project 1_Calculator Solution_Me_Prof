using System;
using System.Collections.Generic;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main()
        {
            Calculater calculater = new Calculater();

            calculater.Add(10);
            calculater.PrintResult();

            calculater.Multiply(2);
            calculater.PrintResult();

            calculater.Subtract(5);
            calculater.PrintResult();

            calculater.Clear();


            calculater.Add(10);
            calculater.PrintResult();

            calculater.Divid(-2);
            calculater.PrintResult();



            calculater.CancelLastOperation();
        }
        class Calculater
        {
            private int _result = 0, _prevResult = 0, _userInput = 0, _prevUserInput = 0;
            private string _operationName = "", _prevOpearionName = "";


            //****************** ((setters and getters))****************************//
            private void _setResult(int number) => _result = number;
            private int _getResult() => _result;
            private void _setPrevResult() => _prevResult = _getResult();
            private int _getPrevResult() => _prevResult;
            private void _setUserInput(int number) => _userInput = number;
            private int _getUserInput() => _userInput;
            private void _setPrevUserInput() => _prevUserInput = _userInput;
            private int _getPrevUserInput() => _prevUserInput;
            private void _setOperationName(string operationName) => _operationName = operationName;
            private string _getOperationName() => _operationName;
            private void _setPrevOperationName() => _prevOpearionName = _operationName;
            private string _getPrevOperationName() => _prevOpearionName;
            //***************************************************************//
            private bool _isZero(int number) => number == 0;
            private string _resultRow(string operationName, int userInput, int result) =>
                "Result After " + operationName.PadRight(12, ' ') + " "
                                + userInput.ToString("00") + " is: "
                                + result.ToString("00");
            private void _clearMessage()
            {
                Console.WriteLine();
                Console.WriteLine("Cleared Successfully");
                Console.WriteLine();
            }
            private void _cancelLatOperationMessage()
            {
                Console.WriteLine();
                Console.WriteLine("Canceled Last Operation");
                Console.WriteLine();
            }
            private void _resetProps()
            {
                _result = 0;
            }
            private void _saveLog()
            {
                _setPrevResult();
                _setPrevOperationName();
                _setPrevUserInput();
            }
            private void calc(int userInput, string operationName)
            {
                _saveLog();
                _setOperationName(operationName);
                _setUserInput(userInput);

                switch (operationName)
                {
                    case "Adding":
                        _setResult(_getResult() + userInput);
                        break;
                    case "Subtracting":
                        _setResult(_getResult() - userInput);
                        break;
                    case "Multipling":
                        _setResult(_getResult() * userInput);
                        break;
                    case "Dividing":
                        if (_isZero(userInput))
                            userInput = 1;
                        _setResult(_getResult() / userInput);
                        break;
                    default:
                        Console.WriteLine("Invalid Operatoin!!");
                        break;
                }
            }
            public void CancelLastOperation()
            {
                _setResult(_getPrevResult());
                _setUserInput(_getPrevUserInput());
                _setOperationName(_getPrevOperationName());
                _cancelLatOperationMessage();
                PrintResult();
            }
            public void Clear()
            {
                _clearMessage();
                _resetProps();
            }
            public void PrintResult() =>
                Console.WriteLine(_resultRow(_getOperationName(), _getUserInput(), _getResult()));
            public void Add(int userInput) => calc(userInput, "Adding");
            public void Subtract(int userInput) => calc(userInput, "Subtracting");
            public void Multiply(int userInput) => calc(userInput, "Multipling");
            public void Divid(int userInput) => calc(userInput, "Dividing");
        }
    }
}
