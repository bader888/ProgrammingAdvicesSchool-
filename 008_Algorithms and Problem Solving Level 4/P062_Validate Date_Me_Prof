using System;

namespace lab
{
    class Program
    {
        static void Main()
        {
            printFinalResult();
        }
        enum enDateCompare { Before = -1, Equal = 0, After = 1 }
        struct Date
        {
            public int day, month, year;
        }
        static int readNumber(string dateSection)
        {
            Console.Write("Please enter a {0}: ", dateSection);
            return int.Parse(Console.ReadLine());
        }
        static Date readDate()
        {
            Date date = new Date();

            date.day = readNumber("day");
            date.month = readNumber("month");
            date.year = readNumber("year");

            Console.WriteLine();

            return date;
        }
        static bool isLeapYear(int year) =>
          ((year % 400 == 0) || (year % 4 == 0 && year % 100 != 0)) ? true : false;
        static int numberDaysInAMonth(int year, int monthNumber)
        {
            int[] NumberOfMonthDays = new int[] { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

            return monthNumber == 2 ? (isLeapYear(year) ? 29 : 28) : NumberOfMonthDays[monthNumber - 1];
        }
        static bool isValidMonth(int monthNumber) =>
            !(monthNumber < 1 || monthNumber > 12);
        static bool isValidDay(Date date) =>
            !(date.day < 1 || date.day > numberDaysInAMonth(date.year, date.month));
        static bool isValidDate(Date date) =>
            isValidDay(date) && isValidMonth(date.month);
        static void printFinalResult()
        {
            if (isValidDate(readDate()))
                Console.WriteLine("Yes, Date is a valid date.");
            else
                Console.WriteLine("No, Date is Not a valid date.");
        }
    }
}
