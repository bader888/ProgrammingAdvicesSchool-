using System;

namespace lab
{
    class Program
    {
        static void Main()
        {
            printFinalResult();
        }
        enum enDateCompare { Before = -1, Equal = 0, After = 1}
        struct Date
        {
            public int day, month, year;
        }
        struct DatePeriod
        {
            public Date StartDate, EndDate;
        }
        static int readNumber(string dateSection)
        {
            Console.Write("Please enter a {0}: ", dateSection);
            return int.Parse(Console.ReadLine());
        }
        static Date readDate()
        {
            Date date = new Date();

            date.day = readNumber("day");
            date.month = readNumber("month");
            date.year = readNumber("year");

            Console.WriteLine();

            return date;
        }
        static DatePeriod readDatePeriod()
        {
            DatePeriod datePeriod = new DatePeriod();

            Console.WriteLine("Enter Start Date: ");
            datePeriod.StartDate = readDate();

            Console.WriteLine("Enter End Date: ");
            datePeriod.EndDate = readDate();

            return datePeriod;
        }
        static bool isDate1BeforeDate2(Date date1, Date date2) =>
             (date1.year < date2.year) ? true : ((date1.year == date2.year) ?
            (date1.month < date2.month ? true :
            (date1.month == date2.month ?
            date1.day < date2.day : false)) : false);
        static bool isDate1EqualDate2(Date date1, Date date2) =>
            date1.year == date2.year &&
            date1.month == date2.month &&
            date1.day == date2.day ? true : false;
        static enDateCompare compareDates(Date date1, Date date2)
        {
            if (isDate1BeforeDate2(date1, date2))
                return enDateCompare.Before;
            else if (isDate1EqualDate2(date1, date2))
                return enDateCompare.Equal;
            else
                return
                    enDateCompare.After;
        }
        static bool isOverLapsPeriods(DatePeriod period1, DatePeriod period2) =>
               compareDates(period2.EndDate, period1.StartDate) == enDateCompare.Before ||
               compareDates(period2.StartDate, period1.EndDate) == enDateCompare.After ? false : true;      
        
        static void printFinalResult()
        {
            Console.WriteLine("Enter Period 1:");
            DatePeriod period1 = readDatePeriod();


            Console.WriteLine("Enter Period 2:");
            DatePeriod period2 = readDatePeriod();

            if (isOverLapsPeriods(period1, period2))
                Console.WriteLine("Yes, Periods Overlaps.");
            else
                Console.WriteLine("No, Periods are Not Overlaps.");
        }
    }
}
