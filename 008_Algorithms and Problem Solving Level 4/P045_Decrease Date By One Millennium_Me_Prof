using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main()
        {
            printFinalResult();
        }
        struct Date
        {
            public int day, month, year;
        }
        static int readNumber(string dateSection)
        {
            Console.Write("Please enter a {0}: ", dateSection);
            return int.Parse(Console.ReadLine());
        }
        static Date readDate()
        {
            Date date = new Date();

            date.day = readNumber("day");
            date.month = readNumber("month");
            date.year = readNumber("year");

            return date;
        }
        static bool isLeapYear(int year) =>
            ((year % 400 == 0) || (year % 4 == 0 && year % 100 != 0)) ? true : false;
        static int numberDaysInAMonth(int year, int monthNumber)
        {
            int[] NumberOfMonthDays = new int[] { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

            return monthNumber == 2 ? (isLeapYear(year) ? 29 : 28) : NumberOfMonthDays[monthNumber - 1];
        }
        static bool isFirstDayInMonth(Date date) => date.day == 1 ? true : false;
        static bool isFirstMonthInYear(int Month) => Month == 1 ? true : false;

        static string printDate(Date date) =>
             date.day + "/" + date.month + '/' + date.year;
        static Date decreaseDateByOneDay(Date date)
        {
            if (isFirstDayInMonth(date))
            {
                if (isFirstMonthInYear(date.month))
                {
                    date.day = 31;
                    date.month = 12;
                    date.year--;
                }
                else
                {
                    date.month--;
                    date.day = numberDaysInAMonth(date.year, date.month);
                }
            }
            else
            {
                date.day--;
            }
            return date;
        }
        static Date decreaseDateByXDays(Date date, int decreasingDays)
        {
            for (int i = 0; i < decreasingDays; i++)
                date = decreaseDateByOneDay(date);

            return date;
        }
        static Date decreaseDateByOneweek(Date date)
        {
            for (int i = 0; i < 7; i++)
                date = decreaseDateByOneDay(date);

            return date;
        }
        static Date decreaseDateByXWeeks(Date date, int decreasingWeeks)
        {
            for (int i = 0; i < decreasingWeeks; i++)
                date = decreaseDateByOneweek(date);

            return date;
        }
        static Date decreaseDateByOneMonth(Date date)
        {
            if (date.month == 1)
            {
                date.month = 12;
                date.year--;
            }
            else
                date.month--;

            int numberOfDaysInCurrentMonth = numberDaysInAMonth(date.year, date.month);

            if (date.day > numberOfDaysInCurrentMonth)
            {
                date.day = numberOfDaysInCurrentMonth;
            }
            return date;
        }
        static Date decreaseDateByXMonths(Date date, int decreasingMonths)
        {
            for (int i = 0; i < decreasingMonths; i++)
                date = decreaseDateByOneMonth(date);

            return date;
        }
        static Date decreaseDateByOneYear(Date date)
        {
            date.year--;
            return date;
        }
        static Date decreaseDateByXYears(Date date, int decreasingYears)
        {
            for (int i = 0; i < decreasingYears; i++)
                date = decreaseDateByOneYear(date);

            return date;
        }
        static Date decreaseDateByXYearsFaster(Date date, int decreasingYears)
        {
            date.year -= decreasingYears;
            return date;
        }
        static Date decreaseDateByOneDecade(Date date)
        {
            date = decreaseDateByXYearsFaster(date, 10);
            return date;
        }
        static Date decreaseDateByXDecades(Date date, int decreasingDecades)
        {
            for (int i = 0; i < decreasingDecades; i++)
                date = decreaseDateByOneDecade(date);

            return date;
        }
        static Date decreaseDateByXDecadesFaster(Date date, int decreasingDecades)
        {
            date.year -= 10 * decreasingDecades;
            return date;
        }
        static Date decreaseDateByOneCentury(Date date)
        {
            date.year -= 100;
            return date;
        }
        static Date decreaseDateByOneMillennium(Date date)
        {
            date.year -= 1000;
            return date;
        }

        static void printFinalResult()
        {
            Date date = readDate();

            Console.WriteLine();
            Console.WriteLine("Date After: ");
            Console.WriteLine();

            Console.WriteLine("01- Subtracting one day is: {0}", printDate(decreaseDateByOneDay(date)));
            Console.WriteLine("02- Subtracting 10 days is: {0}", printDate(decreaseDateByXDays(decreaseDateByOneDay(date), 10)));
            Console.WriteLine("03- Subtracting one week is: {0}", printDate(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10))));
            Console.WriteLine("04- Subtracting 10 weeks is: {0}", printDate(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)));
            Console.WriteLine("05- Subtracting One Month is: {0}", printDate(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10))));
            Console.WriteLine("06- Subtracting 5 Months is: {0}", printDate(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5)));
            Console.WriteLine("07- Subtracting One Year is: {0}", printDate(decreaseDateByOneYear(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5))));
            Console.WriteLine("08- Subtracting 10 Years is: {0}", printDate(decreaseDateByXYears(decreaseDateByOneYear(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5)), 10)));
            Console.WriteLine("09- Subtracting 10 Years (Faster) is: {0}", printDate(decreaseDateByXYearsFaster(decreaseDateByXYears(decreaseDateByOneYear(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5)), 10), 10)));
            Console.WriteLine("10- Subtracting One Decade is: {0}", printDate(decreaseDateByOneDecade(decreaseDateByXYearsFaster(decreaseDateByXYears(decreaseDateByOneYear(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5)), 10), 10))));
            Console.WriteLine("11- Subtracting 10 Decades is: {0}", printDate(decreaseDateByXDecades(decreaseDateByOneDecade(decreaseDateByXYearsFaster(decreaseDateByXYears(decreaseDateByOneYear(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5)), 10), 10)), 10)));
            Console.WriteLine("12- Subtracting 10 Decades (faster) is: {0}", printDate(decreaseDateByXDecadesFaster(decreaseDateByXDecades(decreaseDateByOneDecade(decreaseDateByXYearsFaster(decreaseDateByXYears(decreaseDateByOneYear(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5)), 10), 10)), 10),10)));
            Console.WriteLine("13- Subtracting One Century is: {0}", printDate(decreaseDateByOneCentury(decreaseDateByXDecadesFaster(decreaseDateByXDecades(decreaseDateByOneDecade(decreaseDateByXYearsFaster(decreaseDateByXYears(decreaseDateByOneYear(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5)), 10), 10)), 10), 10))));
            Console.WriteLine("14- Subtracting One Millennium is: {0}", printDate(decreaseDateByOneMillennium(decreaseDateByOneCentury(decreaseDateByXDecadesFaster(decreaseDateByXDecades(decreaseDateByOneDecade(decreaseDateByXYearsFaster(decreaseDateByXYears(decreaseDateByOneYear(decreaseDateByXMonths(decreaseDateByOneMonth(decreaseDateByXWeeks(decreaseDateByOneweek(decreaseDateByXDays(decreaseDateByOneDay(date), 10)), 10)), 5)), 10), 10)), 10), 10)))));
        }
    }
}
