using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace lab
{
    class Program
    {
        static void Main()
        {
            printFinalResult();
        }
        struct Date
        {
            public int day, month, year;
        }
        static int readNumber(string dateSection)
        {
            Console.Write("Please enter a {0}: ", dateSection);
            return int.Parse(Console.ReadLine());
        }
        static Date readDate()
        {
            Date date = new Date();

            date.day = readNumber("day");
            date.month = readNumber("month");
            date.year = readNumber("year");

            return date;
        }
        static bool isLeapYear(int year) =>
            ((year % 400 == 0) || (year % 4 == 0 && year % 100 != 0)) ? true : false;
        static int numberDaysInAMonth(int year, int monthNumber)
        {
            int[] NumberOfMonthDays = new int[] { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

            return monthNumber == 2 ? (isLeapYear(year) ? 29 : 28) : NumberOfMonthDays[monthNumber - 1];
        }
        static bool isLastDayInMonth(Date date) =>
            date.day == numberDaysInAMonth(date.year, date.month) ? true : false;

        static int diffDays(int diffMonthsDays, int day1, int day2) =>
            diffMonthsDays = diffMonthsDays - day1 + day2;
        static int diffMonthsDays(int month1, int month2, int year)
        {
            int diffMonthsDays = 0;

            for (int i = month1; i < month2; i++)
                diffMonthsDays += numberDaysInAMonth(year, i);

            return diffMonthsDays;
        }
        static int diffYearsDays(int year1, int year2)
        {
            int diffYearsDays = 0;

            for (int i = year1; i < year2; i++)
                if (isLeapYear(i))
                    diffYearsDays += 366;
                else
                    diffYearsDays += 365;

            return diffYearsDays;

        }
        static int diffDaysBetweenDate1AndDate2(Date date1, Date date2)=>
            diffDays(diffMonthsDays(date1.month, date2.month, date1.year), date1.day, date2.day) +
                diffYearsDays(date1.year, date2.year);
        static void printFinalResult()
        {
            int diffDays = diffDaysBetweenDate1AndDate2(readDate(), readDate());
            Console.WriteLine("Diffrence is: {0} Day(s).", diffDays);
            Console.WriteLine("Diffrence (Including end day) is: {0} Day(s).", diffDays + 1);
        }
    }
}
